// CONFIGURATION LAYER [GLOBAL] ##############################################

	// A. SYSTEM COLORS ++++++++++++++++++++++++++++++++++++++++++++++++

		// A.1 Grays
		$black:                 #000;
		$grayDarker:            #222;
		$grayDark:              #333;
		$gray:                  #555;
		$grayLight:             #999;
		$grayLighter:           #eee;
		$white:                 #fff;
		
		
		// A.2 Accent colors
		$blue:                  #00BFFF;
		$blueDark:              #0064cd;
		$green:                 #46a546;
		$red:                   #9d261d;
		$yellow:                #ffc40d;
		$orange:                #f89406;
		$pink:                  #c3325f;
		$purple:                #7a43b6;
		
		// A.3 Links
		$link-color:			$blue;
		$link-hover:			darken($link-color, 15);
		
	// A. END ++++++++++++++++++++++++++++++++++++++++++++++++
		
	// C. CSSWIZARDRY GRIDS ++++++++++++++++++++++++++++++++++++++++++++++++
		
		/**
		 * If you are building a non-responsive site but would still like to use
		 * csswizardry-grids, set this to ‘false’:
		 */
		$responsive:            true!default;
		
		
		/**
		 * Is this build mobile first? Setting to ‘true’ means that all grids will be
		 * 100% width if you do not apply a more specific class to them.
		 */
		$mobile-first:          true!default;
		
		
		/**
		 * Define which namespaced breakpoints you would like to generate for each of
		 * widths, push and pull. This is handy if you only need pull on, say, desk, or
		 * you only need a new width breakpoint at mobile sizes. It allows you to only
		 * compile as much CSS as you need. All are turned on by default, but you can
		 * add and remove breakpoints at will.
		 *
		 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
		 * have been set to ‘true’.
		 */
		$breakpoint-has-widths: ('mobile', 'tablet', 'desk', 'desk-wide')!default;
	
		/**
		 * Set the spacing between your grid items.
		 */
		$gutter:                20px!default;
		
		
		/**
		 * Would you like Sass’ silent classes, or regular CSS classes?
		 */
		$use-silent-classes:    false!default;
		
		
		/**
		 * Using `inline-block` means that the grid items need their whitespace removing
		 * in order for them to work correctly. Set the following to true if you are
		 * going to achieve this by manually removing/commenting out any whitespace in
		 * your HTML yourself.
		 *
		 * Setting this to false invokes a hack which cannot always be guaranteed,
		 * please see the following for more detail:
		 *
		 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
		 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
		 */
		$use-markup-fix:        false!default;
		
		
		
		
		/**
		 * You do not need to edit anything from this line onward; csswizardry-grids is
		 * good to go. Happy griddin’!
		 */
		$class-type:            unquote(".");
		
		@if $use-silent-classes == true{
		    $class-type:        unquote("%");
		}	
	
	// C. END ++++++++++++++++++++++++++++++++++++++++++++++++
		
	
// END OF FILE ##############################################